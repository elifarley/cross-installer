#!/usr/bin/env sh
CMD_BASE="$(readlink -f $0)" || CMD_BASE="$0"; CMD_BASE="$(dirname $CMD_BASE)"

_INCLUDES=minimal
for item in $_INCLUDES; do . "$CMD_BASE/../lib/$item.sh"; done

import_shell_lib || FORCE=1 install_shell_lib

_PLUGINS=''
# breaks if "plugins" dir contains only non *.sh files
test -d "$CMD_BASE"/../plugins && test "$(ls "$CMD_BASE"/../plugins)" && \
  for item in "$CMD_BASE"/../plugins/*.sh; do
    . $item && \
    _pn="$(basename "$item")" && \
    _PLUGINS="$_PLUGINS ${_pn%.sh}"
  done

test "$DEBUG" && set -x

main() {
  local cmd="$1"; test $# -gt 0 && shift
  test "$cmd" = install && echo '*install* is deprecated and will be removed soon. Using *add* instead' && cmd=add
  case "$cmd" in
    meta|add|configure) { test "$DEBUG" && echo "Calling special cmd: $cmd $*" ;}; call_fun "$cmd" "$@";;
    *) { test "$DEBUG" && echo "Calling cmd: $cmd '' $*" ;}; call_fun "$cmd" '' "$@";;
  esac
}

call_fun() {
  local fun="$1"; test $# -gt 0 && shift
  local suffix="$1"; test $# -gt 0 && shift

  local pkg_tool
  for pkg_tool in apt-get dpkg apk pacman dnf yum rpm zypper emerge slapt-get NotFound; do
    hascmd "$pkg_tool" && break
  done; pkg_tool="${pkg_tool%%-*}"

  local fname="$(echo ${fun}${suffix:+_$suffix})"; fname="$(echo $fname | tr -c 'a-zA-Z0-9_\n' '_' )"
  for fn in "$fname" "${pkg_tool:+${fname}_$pkg_tool}"; do
    test "$fn" || continue
    hascmd "$fn" && { eval "$fn" "$@"; return ;}
  done

  invalid_cmd "$fun $suffix" "$@"

}

invalid_cmd() {
  echo "Usage: $0 update-pkg-list|add-pkg|add|save-image-info|configure|add-user|cleanup"
  echo "Input params: " "$@"
  return 1
}

main "$@"
